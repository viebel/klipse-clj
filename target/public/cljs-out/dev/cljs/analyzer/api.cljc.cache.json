["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",["~$find-ns","~$remove-ns","~$ns-publics","~$ns-resolve","~$ns-interns","~$all-ns","~$resolve"]],"~:name","~$cljs.analyzer.api","~:imports",null,"~:requires",["^ ","~$env","~$cljs.env","^C","^C","~$ana","~$cljs.analyzer","^E","^E"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$with-state",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","~:line",25,"~:column",11,"~:end-line",25,"~:end-column",21,"~:macro",true,"~:arglists",["~#list",["~$quote",["^S",[["~$state","~$body"]]]]],"~:doc","Run the body with the given compilation state Atom<Map>."],"^>","~$cljs.analyzer.api/with-state","~:variadic",false,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",21,"~:method-params",["^S",[["~$&form","~$&env","^U","^V"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^N",1,"^M",25,"^Q",true,"^O",25,"~:max-fixed-arity",4,"~:fn-var",false,"^R",["^S",["^T",["^S",[["^U","^V"]]]]],"^W","Run the body with the given compilation state Atom<Map>."],"^7",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",163,"^N",7,"^O",163,"^P",14,"^R",["^S",["^T",["^S",[["~$sym"],["^U","^15"]]]]],"^W","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.","~:top-fn",["^ ","^Y",false,"^13",2,"^Z",["^S",[["^15"],["^U","^15"]]],"^R",["^S",[["^15"],["^U","^15"]]],"^12",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/find-ns","^Y",false,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",14,"^16",["^ ","^Y",false,"^13",2,"^Z",["^S",[["^15"],["^U","^15"]]],"^R",["^S",[["^15"],["^U","^15"]]],"^12",["^S",[null,null]]],"^Z",["^S",[["^15"],["^U","^15"]]],"^11",null,"^12",["^S",[null,null]],"^N",1,"^M",163,"^O",163,"^13",2,"^14",true,"^R",["^S",[["^15"],["^U","^15"]]],"^W","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns."],"^8",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",205,"^N",7,"^O",205,"^P",16,"^R",["^S",["^T",["^S",[["~$ns"],["^U","^18"]]]]],"^W","Removes the namespace named by the symbol.","^16",["^ ","^Y",false,"^13",2,"^Z",["^S",[["^18"],["^U","^18"]]],"^R",["^S",[["^18"],["^U","^18"]]],"^12",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/remove-ns","^Y",false,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",16,"^16",["^ ","^Y",false,"^13",2,"^Z",["^S",[["^18"],["^U","^18"]]],"^R",["^S",[["^18"],["^U","^18"]]],"^12",["^S",[null,null]]],"^Z",["^S",[["^18"],["^U","^18"]]],"^11",null,"^12",["^S",[null,null]],"^N",1,"^M",205,"^O",205,"^13",2,"^14",true,"^R",["^S",[["^18"],["^U","^18"]]],"^W","Removes the namespace named by the symbol."],"^9",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",183,"^N",7,"^O",183,"^P",17,"^R",["^S",["^T",["^S",[["^18"],["^U","^18"]]]]],"^W","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.","^16",["^ ","^Y",false,"^13",2,"^Z",["^S",[["^18"],["^U","^18"]]],"^R",["^S",[["^18"],["^U","^18"]]],"^12",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/ns-publics","^Y",false,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",17,"^16",["^ ","^Y",false,"^13",2,"^Z",["^S",[["^18"],["^U","^18"]]],"^R",["^S",[["^18"],["^U","^18"]]],"^12",["^S",[null,null]]],"^Z",["^S",[["^18"],["^U","^18"]]],"^11",null,"^12",["^S",[null,null]],"^N",1,"^M",183,"^O",183,"^13",2,"^14",true,"^R",["^S",[["^18"],["^U","^18"]]],"^W","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars."],"~$get-options",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",55,"^N",7,"^O",55,"^P",18,"^R",["^S",["^T",["^S",[[],["^U"]]]]],"^W","Return the compiler options from compiler state.","^16",["^ ","^Y",false,"^13",1,"^Z",["^S",[[],["^U"]]],"^R",["^S",[[],["^U"]]],"^12",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/get-options","^Y",false,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",18,"^16",["^ ","^Y",false,"^13",1,"^Z",["^S",[[],["^U"]]],"^R",["^S",[[],["^U"]]],"^12",["^S",[null,null]]],"^Z",["^S",[[],["^U"]]],"^11",null,"^12",["^S",[null,null]],"^N",1,"^M",55,"^O",55,"^13",1,"^14",true,"^R",["^S",[[],["^U"]]],"^W","Return the compiler options from compiler state."],"~$in-cljs-user",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",213,"^N",11,"^O",213,"^P",23,"^Q",true,"^R",["^S",["^T",["^S",[["^B","~$&","^V"]]]]],"^W","Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\n  environment atom and runs body.","^16",["^ ","^Y",true,"^13",3,"^Z",[["^S",["^[","^10","^B","^V"]]],"^R",["^S",[["^[","^10","^B","~$&","^V"]]],"^12",["^S",[null]]]],"^>","~$cljs.analyzer.api/in-cljs-user","^Y",true,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",23,"^16",["^ ","^Y",true,"^13",3,"^Z",[["^S",["^[","^10","^B","^V"]]],"^R",["^S",[["^[","^10","^B","~$&","^V"]]],"^12",["^S",[null]]],"^Z",[["^S",["^[","^10","^B","^V"]]],"^11",null,"^12",["^S",[null]],"^N",1,"^M",213,"^Q",true,"^O",213,"^13",3,"^14",false,"^R",["^S",[["^[","^10","^B","~$&","^V"]]],"^W","Binds cljs.analyzer/*cljs-ns* to 'cljs.user and uses the given compilation\n  environment atom and runs body."],"~$warning-enabled?",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",43,"^N",7,"^O",43,"^P",23,"^R",["^S",["^T",["^S",[["~$warning-type"]]]]],"^W","Test if the given warning-type is enabled."],"^>","~$cljs.analyzer.api/warning-enabled?","^Y",false,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",23,"^Z",["^S",[["^1@"]]],"^11",null,"^12",["^S",[null,null]],"^N",1,"^M",43,"^O",43,"^13",1,"^14",true,"^R",["^S",["^T",["^S",[["^1@"]]]]],"^W","Test if the given warning-type is enabled."],"^:",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",196,"^N",7,"^O",196,"^P",17,"^R",["^S",["^T",["^S",[["^18","^15"],["^U","^18","^15"]]]]],"^W","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.","^16",["^ ","^Y",false,"^13",3,"^Z",["^S",[["^18","^15"],["^U","^18","^15"]]],"^R",["^S",[["^18","^15"],["^U","^18","^15"]]],"^12",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/ns-resolve","^Y",false,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",17,"^16",["^ ","^Y",false,"^13",3,"^Z",["^S",[["^18","^15"],["^U","^18","^15"]]],"^R",["^S",[["^18","^15"],["^U","^18","^15"]]],"^12",["^S",[null,null]]],"^Z",["^S",[["^18","^15"],["^U","^18","^15"]]],"^11",null,"^12",["^S",[null,null]],"^N",1,"^M",196,"^O",196,"^13",3,"^14",true,"^R",["^S",[["^18","^15"],["^U","^18","^15"]]],"^W","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var."],"~$empty-state",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",20,"^N",7,"^O",20,"^P",18,"^R",["^S",["^T",["^S",[[]]]]],"^W","Creates an empty compilation state Atom<Map>."],"^>","~$cljs.analyzer.api/empty-state","^Y",false,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",18,"^Z",["^S",[[]]],"^11",null,"^12",["^S",[null,null]],"^N",1,"^M",20,"^O",20,"^13",0,"^14",true,"^R",["^S",["^T",["^S",[[]]]]],"^W","Creates an empty compilation state Atom<Map>."],"~$no-warn",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",36,"^N",11,"^O",36,"^P",18,"^Q",true,"^R",["^S",["^T",["^S",[["~$&","^V"]]]]],"^W","Disable analyzer warnings for any analysis executed in body.","^16",["^ ","^Y",true,"^13",2,"^Z",[["^S",["^[","^10","^V"]]],"^R",["^S",[["^[","^10","~$&","^V"]]],"^12",["^S",[null]]]],"^>","~$cljs.analyzer.api/no-warn","^Y",true,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",18,"^16",["^ ","^Y",true,"^13",2,"^Z",[["^S",["^[","^10","^V"]]],"^R",["^S",[["^[","^10","~$&","^V"]]],"^12",["^S",[null]]],"^Z",[["^S",["^[","^10","^V"]]],"^11",null,"^12",["^S",[null]],"^N",1,"^M",36,"^Q",true,"^O",36,"^13",2,"^14",false,"^R",["^S",[["^[","^10","~$&","^V"]]],"^W","Disable analyzer warnings for any analysis executed in body."],"~$empty-env",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",31,"^N",7,"^O",31,"^P",16,"^R",["^S",["^T",["^S",[[]]]]],"^W","Creates an empty analysis environment."],"^>","~$cljs.analyzer.api/empty-env","^Y",false,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",16,"^Z",["^S",[[]]],"^11",null,"^12",["^S",[null,null]],"^N",1,"^M",31,"^O",31,"^13",0,"^14",true,"^R",["^S",["^T",["^S",[[]]]]],"^W","Creates an empty analysis environment."],"~$default-warning-handler",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",48,"^N",7,"^O",48,"^P",30,"^R",["^S",["^T",["^S",[["^1@","^B","~$extra"]]]]],"^W","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^>","~$cljs.analyzer.api/default-warning-handler","^Y",false,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",30,"^Z",["^S",[["^1@","^B","^1J"]]],"^11",null,"^12",["^S",[null,null]],"^N",1,"^M",48,"^O",48,"^13",3,"^14",true,"^R",["^S",["^T",["^S",[["^1@","^B","^1J"]]]]],"^W","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^;",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",172,"^N",7,"^O",172,"^P",17,"^R",["^S",["^T",["^S",[["^18"],["^U","^18"]]]]],"^W","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.","^16",["^ ","^Y",false,"^13",2,"^Z",["^S",[["^18"],["^U","^18"]]],"^R",["^S",[["^18"],["^U","^18"]]],"^12",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/ns-interns","^Y",false,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",17,"^16",["^ ","^Y",false,"^13",2,"^Z",["^S",[["^18"],["^U","^18"]]],"^R",["^S",[["^18"],["^U","^18"]]],"^12",["^S",[null,null]]],"^Z",["^S",[["^18"],["^U","^18"]]],"^11",null,"^12",["^S",[null,null]],"^N",1,"^M",172,"^O",172,"^13",2,"^14",true,"^R",["^S",[["^18"],["^U","^18"]]],"^W","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars."],"^<",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",155,"^N",7,"^O",155,"^P",13,"^R",["^S",["^T",["^S",[[],["^U"]]]]],"^W","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.","^16",["^ ","^Y",false,"^13",1,"^Z",["^S",[[],["^U"]]],"^R",["^S",[[],["^U"]]],"^12",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/all-ns","^Y",false,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",13,"^16",["^ ","^Y",false,"^13",1,"^Z",["^S",[[],["^U"]]],"^R",["^S",[[],["^U"]]],"^12",["^S",[null,null]]],"^Z",["^S",[[],["^U"]]],"^11",null,"^12",["^S",[null,null]],"^N",1,"^M",155,"^O",155,"^13",1,"^14",true,"^R",["^S",[[],["^U"]]],"^W","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances."],"^=",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",144,"^N",7,"^O",144,"^P",14,"^R",["^S",["^T",["^S",[["^B","^15"]]]]],"^W","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"^>","~$cljs.analyzer.api/resolve","^Y",false,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",14,"^Z",["^S",[["^B","^15"]]],"^11",null,"^12",["^S",[null,null]],"^N",1,"^M",144,"^O",144,"^13",2,"^14",true,"^R",["^S",["^T",["^S",[["^B","^15"]]]]],"^W","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"~$get-js-index",["^ ","^J",null,"^K",["^ ","^L","/Users/viebel/prj/klipse-clj/target/public/cljs-out/dev/cljs/analyzer/api.cljc","^M",61,"^N",7,"^O",61,"^P",19,"^R",["^S",["^T",["^S",[[],["^U"]]]]],"^W","Return the currently computed Google Closure js dependency index from the\n  compiler state.","^16",["^ ","^Y",false,"^13",1,"^Z",["^S",[[],["^U"]]],"^R",["^S",[[],["^U"]]],"^12",["^S",[null,null]]]],"^>","~$cljs.analyzer.api/get-js-index","^Y",false,"^L","target/public/cljs-out/dev/cljs/analyzer/api.cljc","^P",19,"^16",["^ ","^Y",false,"^13",1,"^Z",["^S",[[],["^U"]]],"^R",["^S",[[],["^U"]]],"^12",["^S",[null,null]]],"^Z",["^S",[[],["^U"]]],"^11",null,"^12",["^S",[null,null]],"^N",1,"^M",61,"^O",61,"^13",1,"^14",true,"^R",["^S",[[],["^U"]]],"^W","Return the currently computed Google Closure js dependency index from the\n  compiler state."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:cljs.analyzer/namespaces","~$cljs.core/binding","~:private","~:macros","~:js-dependency-index","~$cljs.analyzer/*cljs-warnings*","^H","~$cljs.env/with-compiler-env","~:options","^T","~$cljs.analyzer/*cljs-ns*","~$cljs.user"]],"~:order",["^1[","^1V","^1Z","^20","^1Y","^1U","^1X","^H","^1W","^21","^T","^22"]],"^W","This is intended to be a stable api for those who need programmatic access\n  to the analyzer."]